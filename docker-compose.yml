services:
  redis-api-gtw:
    container_name: barbershop-redis-api-gateway
    image: redis:latest
    restart: always
    volumes:
      - redis-api-gateway-data:/data
    networks:
      - net-barbershop
    command:
      - redis-server
    logging:
      driver: json-file
      options:
        max-size: 100m
  rabbitmq:
    container_name: barbershop-rabbitmq
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - '5672:5672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq
      - ./.certs/rabbitmq:/etc/ssl/:ro
      - ./.config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./.config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - net-barbershop
    healthcheck:
      test:
        - CMD
        - rabbitmqctl
        - status
      interval: 5s
      timeout: 5s
      retries: 10
    logging:
      driver: json-file
      options:
        max-size: 100m
  mongodb-account:
    container_name: barbershop-mongodb-account
    image: percona/percona-server-mongodb:4.4.3
    restart: always
    volumes:
      - mongodb-account-data:/data/db
      - mongodb-account-config:/data/configdb
      - ./.certs/mongodb/account:/etc/ssl:ro
      - ./.encryption_keys/account:/etc/mongodb/encryptionKeyFile:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ACCOUNT_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ACCOUNT_ROOT_PASS:-admin123}
      MONGO_APPLICATION_DATABASE: barbershop-account
    networks:
      - net-barbershop
    command:
      - '--tlsMode'
      - requireTLS
      - '--tlsCertificateKeyFile'
      - /etc/ssl/server.pem
      - '--tlsCAFile'
      - /etc/ssl/ca_cert.pem
      - '--enableEncryption'
      - '--encryptionKeyFile'
      - /etc/mongodb/encryptionKeyFile/encryption.key
    logging:
      driver: json-file
      options:
        max-size: 100m
  mongodb-schedule-management:
    container_name: barbershop-mongodb-schedule-management
    image: percona/percona-server-mongodb:4.4.3
    restart: always
    volumes:
      - mongodb-schedule-management-data:/data/db
      - mongodb-schedule-management-config:/data/configdb
      - ./.certs/mongodb/schedule-management:/etc/ssl:ro
      - ./.encryption_keys/schedule-management:/etc/mongodb/encryptionKeyFile:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_SCHEDULE_MANAGEMENT_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_SCHEDULE_MANAGEMENT_ROOT_PASS:-admin123}
      MONGO_INITDB_DATABASE: barbershop-schedule-management
    networks:
      - net-barbershop
    command:
      - '--tlsMode'
      - requireTLS
      - '--tlsCertificateKeyFile'
      - /etc/ssl/server.pem
      - '--tlsCAFile'
      - /etc/ssl/ca_cert.pem
      - '--enableEncryption'
      - '--encryptionKeyFile'
      - /etc/mongodb/encryptionKeyFile/encryption.key
    logging:
      driver: json-file
      options:
        max-size: 100m
  api-gateway:
    container_name: barbershop-api-gateway
    build: ./api-gtw
    restart: always
    depends_on:
      - redis-api-gtw
    ports:
      - '8080:8080'
      - '8081:8081'
    environment:
      - TZ=America/Sao_Paulo
      - NODE_ENV=${NODE_ENV:-development}
      - PORT_HTTP=${PORT_HTTP:-8080}
      - PORT_HTTPS=${PORT_HTTPS:-8081}
      - SSL_CERT_PATH=/etc/ssl/server_cert.pem
      - SSL_KEY_PATH=/etc/ssl/server_key.pem
      - JWT_PUBLIC_KEY_PATH=/etc/ssl/jwt.key.pub
      - API_GATEWAY_HOSTNAME=${API_GATEWAY_HOSTNAME:-api.localhost}
      - RABBIT_MGT_HOSTNAME=${RABBIT_MGT_HOSTNAME:-rabbit.localhost}
      - ACCOUNT_SERVICE=https://account:3001
      - SCHEDULE_MANAGEMENT_SERVICE=https://schedule-management:4001
      - RABBIT_MGT_SERVICE=http://rabbitmq:15672
      - ISSUER=barbershop
      - EMULATE_REDIS=false
      - PORT_REDIS=6379
      - HOST_REDIS=redis-api-gtw
    volumes:
      - ./.certs/api-gtw/server_key.pem:/etc/ssl/server_key.pem:ro
      - ./.certs/api-gtw/server_cert.pem:/etc/ssl/server_cert.pem:ro
      - ./.certs/api-gtw/jwt.key.pub:/etc/ssl/jwt.key.pub:ro
    networks:
      - net-barbershop
    logging:
      driver: json-file
      options:
        max-size: 100m
  account:
    container_name: barbershop-account
    build: ./account
    restart: always
    depends_on:
      mongodb-account:
        condition: service_started
      api-gateway:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - '3000:3000'
      - '3001:3001'
    volumes:
      - ./.certs/account:/etc/ssl/:ro
    environment:
      - TZ=America/Sao_Paulo
      - NODE_ENV=${NODE_ENV:-development}
      - PORT_HTTP=${PORT_HTTP_ACC:-3000}
      - PORT_HTTPS=${PORT_HTTPS_ACC:-3001}
      - SSL_CERT_PATH=/etc/ssl/server_cert.pem
      - SSL_KEY_PATH=/etc/ssl/server_key.pem
      - JWT_PRIVATE_KEY_PATH=/etc/ssl/jwt.key
      - JWT_PUBLIC_KEY_PATH=/etc/ssl/jwt.key.pub
      - ISSUER=barbershop
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - MONGODB_ENABLE_TLS=true
      - MONGODB_URI=${ACCOUNT_MONGODB_URI}
      - MONGODB_KEY_PATH=/etc/ssl/mongodb.pem
      - MONGODB_CA_PATH=/etc/ssl/ca_cert.pem
      - RABBITMQ_URI=${ACCOUNT_RABBITMQ_URI}
      - RABBITMQ_CERT_PATH=/etc/ssl/rabbitmq_client_cert.pem
      - RABBITMQ_KEY_PATH=/etc/ssl/rabbitmq_key.pem
      - RABBITMQ_CA_PATH=/etc/ssl/ca_cert.pem
      - ENCRYPT_SECRET_KEY=${ACC_ENCRYPT_SECRET_KEY}
      - SALT_GENERATOR_VALUE=${SALT_GENERATOR_VALUE}
    networks:
      - net-barbershop
  schedule-management:
    container_name: barbershop-schedule-management
    build: ./schedule-management
    restart: always
    depends_on:
      mongodb-schedule-management:
        condition: service_started
      api-gateway:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - '4000:4000'
      - '4001:4001'
    volumes:
      - ./.certs/schedule-management:/etc/ssl/:ro
    environment:
      - TZ=America/Sao_Paulo
      - NODE_ENV=${NODE_ENV:-development}
      - PORT_HTTP=${PORT_HTTP_SCH:-4000}
      - PORT_HTTPS=${PORT_HTTPS_SCH:-4001}
      - SSL_CERT_PATH=/etc/ssl/server_cert.pem
      - SSL_KEY_PATH=/etc/ssl/server_key.pem
      - JWT_PRIVATE_KEY_PATH=/etc/ssl/jwt.key
      - JWT_PUBLIC_KEY_PATH=/etc/ssl/jwt.key.pub
      - ISSUER=barbershop
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - MONGODB_ENABLE_TLS=true
      - MONGODB_URI=${SCHEDULE_MONGODB_URI}
      - MONGODB_KEY_PATH=/etc/ssl/mongodb.pem
      - MONGODB_CA_PATH=/etc/ssl/ca_cert.pem
      - RABBITMQ_URI=${SCHEDULE_MANAGEMENT_RABBITMQ_URI}
      - RABBITMQ_CERT_PATH=/etc/ssl/rabbitmq_client_cert.pem
      - RABBITMQ_KEY_PATH=/etc/ssl/rabbitmq_key.pem
      - RABBITMQ_CA_PATH=/etc/ssl/ca_cert.pem
      - ENCRYPT_SECRET_KEY=${ACC_ENCRYPT_SECRET_KEY}
      - SALT_GENERATOR_VALUE=${SALT_GENERATOR_VALUE}
    networks:
      - net-barbershop

volumes:
  redis-api-gateway-data:
    name: redis-api-gateway-data
  mongodb-account-data:
    name: mongodb-account-data
  mongodb-account-config:
    name: mongodb-account-config
  mongodb-schedule-management-data:
    name: mongodb-schedule-management-data
  mongodb-schedule-management-config:
    name: mongodb-schedule-management-config
  rabbitmq-data:
    name: rabbitmq-data
  rabbitmq-logs:
    name: rabbitmq-logs

networks:
  net-barbershop:
    name: net-barbershop
    driver: bridge
    driver_opts:
      encrypted: 'true'
